# this is an example of the Uber API
# as a demonstration of an API spec in YAML
swagger: '2.0'
info:
  title: Employees API
  description: Create, update, Search and delete Employees 
  version: "1.0.0"
# the domain of the service
host: localhost:8009
# array of all schemes that your API supports
schemes:
  - http
# will be prefixed to all paths
basePath: /v1
produces:
  - application/json
paths:
  
  /:
    get:
      summary: The whole list of users or Employees
      description: |
        Here is the place, users can see the available users.
      parameters:
        Employees:
        - fname: First Name
          lname: Last Name
          age: Age of the User
      tags:
        - Employees
      responses:
        200:
          description: An array of Users
          schema:
            type: array
            items:
              $ref: '#/definitions/Success'
  /add/token/fname/lname/age:
    post:
      summary: Adds an Employees
      description: |
        Here the user can add a new employee to the list. But
        to do this, only a registered or existing employee can
        add by providing the employee token.
      parameters:
        msg: Gives a description of the status
      tags:
        - Add Employee
      responses:
        200:
          description: |
            Adding a new Employee to the list by 
            providing a token.
          schema:
            type: array
            items:
              $ref: '#/definitions/Success'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /mod/token/fname=?/fname=?/lname=?/age=?:
    post:
      summary: Modifies the Employee details
      description: |
        Here the user can modify the employee users by providing the
        user token and user to edit in the first ?. Then new modified
        data in next ?s.
      parameters:
        msg: Status
        obj:
          fname: Changed First Name
          lname: Changed Second Name
          age: Changed Age
          key: temporary key
      tags:
        - Modify the Employee data
      responses:
        200:
          description: |
            Modifies the User details.
          schema:
            type: array
            items:
              $ref: '#/definitions/Success'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Success:
    type: object
    properties:
      product_id:
        type: string
        description: Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles
      currency_code:
        type: string
        description: "[ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) currency code."
      display_name:
        type: string
        description: Display name of product.
      estimate:
        type: string
        description: Formatted string of estimate in local currency of the start location. Estimate could be a range, a single number (flat rate) or "Metered" for TAXI.
      low_estimate:
        type: number
        description: Lower bound of the estimated price.
      high_estimate:
        type: number
        description: Upper bound of the estimated price.
      surge_multiplier:
        type: number
        description: Expected surge multiplier. Surge is active if surge_multiplier is greater than 1. Price estimate already factors in the surge multiplier.
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string